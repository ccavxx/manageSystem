<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="false">

	<!-- 配置权限管理器 --> 
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 规则域 db --><!-- ref对应我们写的realm  MyShiro -->
		<property name="realm" ref="userRealm" />
		<!-- 会话管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 缓存管理器 -->
		<property name="cacheManager" ref="cacheManager" />
		<!-- 记住我配置 -->
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<!-- realm域 这里是从DB数据库读取的 -->
	<bean id="userRealm" class="com.tmh.web.service.realm.UserRealm">
		<!-- 认证匹配规则 加密算法 迭代次数 -->
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<!-- 是否启用缓存 -->
		<property name="cachingEnabled" value="false" />
		<!-- 启用身份验证缓存，即缓存AuthenticationInfo信息，默认false -->
		<!-- <property name="authenticationCachingEnabled" value="fasle"/> -->
		<!-- 缓存AuthenticationInfo信息的缓存名称 -->  
    	<!-- <property name="authenticationCacheName" value="authenticationCache"/> -->  
    	<!-- 启用授权缓存，即缓存AuthorizationInfo信息，默认false -->
    	<!-- <property name="authorizationCachingEnabled" value="false"/>  -->
    	<!-- 缓存AuthorizationInfo信息的缓存名称 --> 
    	<!-- <property name="authorizationCacheName" value="authorizationCache"/>  -->
	</bean>


	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager "></bean>

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.tmh.web.service.realm.RetryLimitHashedCredentialsMatcher">
		<!-- 构造函数初始化 -->
		<constructor-arg ref="cacheManager" />
		<property name="hashAlgorithmName" value="SHA-1" /> <!-- 散列算法 支持md5 SHA-1 SHA-2 默认是SHA-512 -->
		<property name="hashIterations" value="2" /><!-- 散列次数 -->
		<property name="storedCredentialsHexEncoded" value="true" /><!-- 
			是否需要把散列的密文转为16进制 -->
		<property name="excessiveCount" value="3" /><!-- 限制重试次数 -->
	</bean>


	<!-- 密码生成器 与上面的凭证管理一直 -->
	<bean id="pcasswordCreate" class="com.tmh.web.service.realm.PasswordCreate">
		<property name="hashAlgorithmName" value="SHA-1" /> <!-- 散列算法 支持md5 SHA-1 SHA-2 默认是SHA-512 -->
		<property name="hashIterations" value="2" /><!-- 散列次数 -->
		<property name="storedCredentialsHexEncoded" value="true" /><!-- 
			是否需要把散列的密文转为16进制 -->
		<!-- <constructor-arg type="java.lang.String" value="SHA-2" name="hashAlgorithmName" 
			/> -->
		<!-- <constructor-arg type="java.lang.Integer" value="2" name="hashIterations"/> -->
		<!-- <constructor-arg type="java.lang.Boolean" value="true" name="storedCredentialsHexEncoded"/> -->

	</bean>



	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="deleteInvalidSessions" value="true" />
		<!-- <property name="sessionValidationSchedulerEnabled" value="false" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" /> -->
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<!-- 会话DAO -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<!-- 会话验证调度器 quartz版本冲突问题 -->
	<!-- <bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="1800000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean> -->

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" /><!-- 支持HttpOnly属性 客户端访问不了 -->
		<property name="maxAge" value="-1" />
	</bean>

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('zs')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>

	<!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 调用我们配置的权限管理器 --> 
		<property name="securityManager" ref="securityManager" />
		<!-- 配置我们的登录请求地址 --> 
		<property name="loginUrl" value="/login" />
		<!-- 配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址 -->
		<property name="successUrl" value="/index" />
		<!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 -->  
        <property name="unauthorizedUrl" value="/403"/>
        <!-- 权限配置 -->
		<property name="filterChainDefinitions">
			<value>
			    <!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login-->    
                <!-- /** = authc --> 
                <!-- 登录请求验证 -->
				/login = authc 
				<!-- 首页登录验证 -->
			    /index = authc
				<!-- 新闻模块登录验证 -->
				/news/** = authc
				<!-- anon表示此地址不需要任何权限即可访问 -->  
                /static/**=anon  
                
                <!-- perms[perms:admin]表示访问此连接需要权限为perms:admin的用户 -->
                /user/create=perms[perms:admin]  
                
                <!-- roles[admin]表示访问此连接需要用户的角色为admin --> 
                <!-- /user/create=roles[role:admin] -->             
                <!-- /user/delete/**=roles[role:admin]  -->
                <!-- /user/update/**=roles[role:manager]  --> 
                
			</value>
		</property>
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 和springmvc整合用的   用于AOP方式的拦截反问 -->
	<aop:config proxy-target-class="true"></aop:config>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	
	<!-- shiro redisManager begin -->
	<!-- <bean id="redisManager" class="org.crazycake.shiro.RedisManager">
	    <property name="host" value="127.0.0.1"/>
	    <property name="port" value="7000"/>
	    <property name="expire" value="1800"/>
	</bean> -->
	
	<!-- redisSessionDAO -->
	<!-- <bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
	    <property name="redisManager" ref="redisManager" />
	</bean> -->
	
	<!-- sessionManager -->
	<!-- <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="sessionDAO" ref="redisSessionDAO" />
	</bean> -->
	
	<!-- cacheManager -->
	<!-- <bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
	    <property name="redisManager" ref="redisManager" />
	</bean> -->
	<!-- shiro redisManager end -->
	
	
	
</beans>